Here’s the clean, no-Play-Store, step-by-step right after you’ve done buildozer init in your WSL/Linux shell:

1. Edit buildozer.spec

[app]
title = Stark
package.name = stark
package.domain = org.stark
source.dir = .
source.include_exts = py,kv,png,jpg,jpeg
version = 0.1
requirements = python3,kivy,requests,plyer
source.name = stark.py
orientation = portrait
android.api = 33
android.minapi = 21
android.archs = armeabi-v7a,arm64-v8a
android.permissions = INTERNET
android.manifest_placeholders = android:usesCleartextTraffic="true"

Save it.

5. Build release APK

buildozer android release

Gives you:

bin/stark-0.1-release-unsigned.apk

6. Create keystore (once)

keytool -genkeypair -v \
  -keystore my-release-key.keystore \
  -alias starkkey \
  -keyalg RSA -keysize 2048 -validity 10000

7. Align and sign

BUILD_TOOLS=$(ls ~/.buildozer/android/platform/android-sdk/build-tools | sort -V | tail -n 1)
ZIPALIGN=~/.buildozer/android/platform/android-sdk/build-tools/$BUILD_TOOLS/zipalign
APKSIGNER=~/.buildozer/android/platform/android-sdk/build-tools/$BUILD_TOOLS/apksigner

$ZIPALIGN -v -p 4 bin/stark-0.1-release-unsigned.apk bin/stark-0.1-release-aligned.apk
$APKSIGNER sign --ks my-release-key.keystore bin/stark-0.1-release-aligned.apk
$APKSIGNER verify bin/stark-0.1-release-aligned.apk

8. Distribute
The file bin/stark-0.1-release-aligned.apk is your final signed APK. Share directly — users enable “Install unknown apps” to sideload.

Do you want me to give you a ready-to-use buildozer.spec with your file-chooser Android permissions already set for your Stark app? That’ll save you editing time.